ls
# Binding health checks to an internal port
management.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

logging.config=classpath:logback.xml

# The name of the Camel app
camel.springboot.name=CamelActiveMQ

# Keeps the application alive
camel.springboot.main-run-controller=true

activemq.route:messaging-myproject.192.168.42.241.nip.io
#activemq.route=amqp-ssl-amq-demo.127.0.0.1.nip.io
#activemq.broker.parameters=transport.trustStoreLocation=/Users/rramalho/workspace/camel-amqp-ssl/openshift-setup/amq-client.ts&transport.trustStorePassword=redhat&transport.verifyHost=false
### mvn spring-boot:run
#activemq.broker.parameters=transport.trustStoreLocation=/home/aboucham/dev/syndesis/enmasse/Abel/amqp-certs/my-cacerts&transport.trustStorePassword=redhat&transport.verifyHost=false
###
### mvn fabric8:deploy
activemq.broker.parameters=transport.trustStoreLocation=/deployments/amqp-certs/my-cacerts&transport.trustStorePassword=redhat&transport.verifyHost=false
###

#mkdir amqp-certs
#mkdir mqtt-certs
#For AMQP based devices, the command is the following :

#oc extract secret/external-certs-messaging --to=amqp-certs -n $NAMESPACE
#In the same way, for MQTT based devices, the command is the following :

#oc extract secret/external-certs-mqtt --to=mqtt-certs -n $NAMESPACE
#keytool -v -import -file tls.crt -alias somecrt -keystore my-cacerts


# The following property binds all previous configurations together
activemq.broker.url=amqps://${activemq.route}:443?${activemq.broker.parameters}
#activemq.broker.username=redhat
activemq.broker.username=admin
#activemq.broker.password=redhat
activemq.broker.password=admin

# Set the number of concurrent consumers for the ActiveMQ ('ACTIVEMQ_CONCURRENT_CONSUMERS')
activemq.concurrent.consumers=10

# Set the number of connections created by the connection pool ('ACTIVEMQ_POOL_MAX_CONNECTIONS')
activemq.pool.max.connections=8
###https://github.com/hodrigohamalho/camel-amqp-ssl
